#include <cstdint>
#include <iostream>

#include "CRC.hpp"
#include "CRC_types.hpp"

constexpr uint8_t TEST_DATA[124] =
{
	0x00, 0x19, 0x45, 0x6C, 0x65, 0x63, 0x20, 0x42,
	0x61, 0x73, 0x73, 0x20, 0x46, 0x6C, 0x74, 0x20,
	0x57, 0x6E, 0x64, 0x20, 0x50, 0x69, 0x63, 0x6B,
	0x20, 0x41, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x41, 0x49, 0x46, 0x46, 0x53, 0x64, 0x32,
	0x61, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x04, 0x95, 0x36, 0x00,
	0x00, 0x05, 0xD8, 0xA2, 0xF7, 0x94, 0x63, 0xA2,
	0xF9, 0x4B, 0x1C, 0x00, 0x00, 0x00, 0x6D, 0x42,
	0x49, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x81, 0x81
};

constexpr CRC_consts_t<uint16_t> XMODEM_CONSTS =
{
	.POLY = 0x1021,
	.INIT = 0,
	.FINAL_XOR = 0,
	.BIT_REV_IN = false,
	.BIT_REV_OUT = false,
	.BYTESWAP_OUT = false,
};

constexpr uint16_t EXPECTED_CRC = 0x6F09;

constexpr CRC_consts_t<uint32_t> CRC_32_CONSTS =
{
	.POLY = 0x04C11DB7,
	.INIT = 0xFFFFFFFF,
	.FINAL_XOR = 0xFFFFFFFF,
	.BIT_REV_IN = true,
	.BIT_REV_OUT = true,
	.BYTESWAP_OUT = false,
};

constexpr uint32_t CRC_32_CHECK_VAL = 0xCBF43926;

int main()
{
	uint16_t res;
	uint32_t res_32;

	res = basic_CRC<uint16_t>(TEST_DATA, sizeof(TEST_DATA), XMODEM_CONSTS);
	if(res != EXPECTED_CRC)
	{
		std::cout << "CRC mismatch!!!" << std::endl;
		std::cout << std::hex << "Expected: " << EXPECTED_CRC << std::endl;
		std::cout << "Got: " << res << std::dec << std::endl;
		//return 1;
	}

	res_32 = basic_CRC<uint32_t>("123456789", 9, CRC_32_CONSTS);
	if(res_32 != CRC_32_CHECK_VAL)
	{
		std::cout << "CRC mismatch!!!" << std::endl;
		std::cout << std::hex << "Expected: " << CRC_32_CHECK_VAL << std::endl;
		std::cout << "Got: " << res_32 << std::dec << std::endl;
		return 2;
	}

	return 0;
};
